<!DOCTYPE html>
<html lang="en-US">
  <head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

<!-- Begin Jekyll SEO tag v2.8.0 -->
<title>Práctica 1.2. Creación de servicio ECS | DOCK_KUB_AVA</title>
<meta name="generator" content="Jekyll v3.10.0">
<meta property="og:title" content="Práctica 1.2. Creación de servicio ECS">
<meta property="og:locale" content="en_US">
<link rel="canonical" href="index.htm">
<meta property="og:url" content="https://netec-mx.github.io/DOCK_KUB_AVA/Capitulo1/practica1/">
<meta property="og:site_name" content="DOCK_KUB_AVA">
<meta property="og:type" content="website">
<meta name="twitter:card" content="summary">
<meta property="twitter:title" content="Práctica 1.2. Creación de servicio ECS">
<script type="application/ld+json">
{"@context":"https://schema.org","@type":"WebPage","headline":"Práctica 1.2. Creación de servicio ECS","url":"https://netec-mx.github.io/DOCK_KUB_AVA/Capitulo1/practica1/"}</script>
<!-- End Jekyll SEO tag -->

    <link rel="stylesheet" href="../../assets/css/style.css?v=59c4f307869c73b2d11aec7c66bb9b0ff02cf6ee">
    <!-- start custom head snippets, customize with your own _includes/head-custom.html file -->

<!-- Setup Google Analytics -->



<!-- You can set your favicon here -->
<!-- link rel="shortcut icon" type="image/x-icon" href="/DOCK_KUB_AVA/favicon.ico" -->

<!-- end custom head snippets -->

  </head>
  <body>
    <div class="container-lg px-3 my-5 markdown-body">
      
      <h1><a href="../../index.htm">DOCK_KUB_AVA</a></h1>
      

      <h1 id="práctica-12-creación-de-servicio-ecs">Práctica 1.2. Creación de servicio ECS</h1>

<h2 id="objetivo-del-laboratorio">Objetivo del laboratorio</h2>
<p>Al finalizar la práctica, serás capaz de:</p>
<ul>
  <li>Desplegar el servicio de correos electrónicos en Amazon ECS.</li>
  <li>Configurar correctamente una cuenta para el envío de correos electrónicos.</li>
  <li>Dockerizar un servicio de backend para facilitar su despliegue.</li>
</ul>

<h2 id="objetivo-visual">Objetivo visual</h2>
<p>El objetivo visual es desplegar un servicio de correos electrónicos completamente funcional utilizando Docker y ECS.
<img src="../../images/Capitulo%201/practica1_objetivo.png" alt="diagrama1"></p>

<h2 id="duración-aproximada">Duración aproximada:</h2>
<ul>
  <li>30 minutos.</li>
</ul>

<h2 id="instrucciones">Instrucciones</h2>

<h3 id="tarea-1-configuracion-token-servicio-email">Tarea 1. Configuracion token servicio email</h3>
<p>Paso 1. En el archivo <code class="language-plaintext highlighter-rouge">application.properties</code>, ubicar la variable spring.mail.password. Esta será utilizada para almacenar el token de envío de correos electrónicos.</p>

<p><img src="../../images/Capitulo%201/practica1_application_properties.png" alt="diagrama1"></p>

<p>Paso 2. Ingresar a las configuraciones de la cuenta de correo y buscar la sección “Contraseñas de aplicaciones”.</p>

<p><img src="../../images/Capitulo%201/practica1_gmial.png" alt="diagrama1"></p>

<p>Paso 3. Crear un nuevo token asignándole un nombre. Para este paso vamos a seguir el siguiente estandar:</p>

<p>Token = manejo de JWT o token de autorizacion
Lab = Laboratorio
Netec= compañia o proposito del token</p>

<p><img src="../../images/Capitulo%201/practica1_gmial_1.png" alt="diagrama1"></p>

<p>Paso 4. Generar el token y reemplazarlo en el archivo <code class="language-plaintext highlighter-rouge">application.properties</code>.</p>

<p><img src="../../images/Capitulo%201/practica1_token_1.png" alt="diagrama1"></p>

<p>Paso 5. Crear el archivo Dockerfile para preparar el servicio para su despliegue en Docker.</p>

<p><img src="../../images/Capitulo%201/practica1_dockerfile.png" alt="diagrama1"></p>

<p>Paso 6. Generar el artefacto de la aplicación ejecutando los comandos <strong>clean</strong> y <strong>package</strong> con Maven.</p>

<p><img src="../../images/Capitulo%201/practica1_mvn.png" alt="diagrama1"></p>

<p><img src="../../images/Capitulo%201/practica1_mvn_2.png" alt="diagrama1"></p>

<h3 id="tarea-2-dockerizando-backend">Tarea 2. Dockerizando BackEnd</h3>

<p>Convertir el servicio de backend en una imagen de Docker y almacenarla en Docker Hub.</p>

<p>Paso 1. Crear el repositorio en Docker Hub.</p>

<p><img src="../../images/Capitulo%201/practca1_docker_1.png" alt="diagrama1"></p>

<p>Paso 2. Nombrar el repositorio en Docker. En este caso se sugiere seguir el siguiente estandar <strong>nombreProyecto_nombreImagen</strong>.</p>

<p><img src="../../images/Capitulo%201/practca1_docker_2.png" alt="diagrama1">
<img src="../../images/Capitulo%201/practca1_docker_3.png" alt="diagrama1"></p>

<p>Paso 3. Crear la imagen de Docker para el servicio de correos electrónicos.</p>

<h3 id="shell">shell</h3>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  docker build <span class="nt">-t</span> img_email:V1 <span class="nb">.</span> 
</code></pre></div></div>

<p><img src="../../images/Capitulo%201/practca1_docker_4.png" alt="diagrama1"></p>

<p>Paso 4. Taggear la imagen en el Docker Hub.</p>

<h3 id="shell-1">shell</h3>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  docker tag img_email:V1 daniel0223/netec_email
</code></pre></div></div>

<p><img src="../../images/Capitulo%201/practca1_docker_5.png" alt="diagrama1"></p>

<p>Paso 5. Subir la imagen a Docker Hub.</p>

<h3 id="shell-2">shell</h3>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  docker push daniel0223/netec_email
</code></pre></div></div>

<p><img src="../../images/Capitulo%201/practca1_docker_6.png" alt="diagrama1"></p>

<p><img src="../../images/Capitulo%201/practca1_docker_7.png" alt="diagrama1"></p>

<h3 id="tarea-3-desplegando-en-ecs">Tarea 3. Desplegando en ECS</h3>

<p>Desplegar el servicio de correos electrónicos en Amazon ECS utilizando Fargate.</p>

<p>Paso 1. Crear una tarea (Task) en el servicio ECS.</p>

<p><img src="../../images/Capitulo%201/ECS_1.png" alt="diagrama1"></p>

<p>Paso 2. Configurar una definición de tarea en Amazon ECS con el nombre <strong>email_task_definition</strong>. Seleccionar AWS Fargate como el tipo de ejecución, lo que permite utilizar un entorno serverless para contenedores. Además, especificar los requisitos de infraestructura: sistema operativo Linux, 1 vCPU, 3 GB de memoria y el modo de red awsvpc para garantizar la conectividad de la tarea.</p>

<p><img src="../../images/Capitulo%201/ECS_2.png" alt="diagrama1"></p>

<p>Paso 3. Mantener la opción <strong>Ninguno</strong> en el rol de ejecución de tareas.</p>

<p><img src="../../images/Capitulo%201/ECS_3.png" alt="diagrama1"></p>

<p>Paso 4. Seleccionar la imagen previamente subida a Docker Hub.</p>

<p><img src="../../images/Capitulo%201/ECS_4.png" alt="diagrama1"></p>

<p>Paso 5. Configurar el puerto de despliegue para la aplicación (backend).</p>

<p><img src="../../images/Capitulo%201/ECS_6.png" alt="diagrama1"></p>

<p>Paso 6. Puerto de despliegue de la aplicación o backend.</p>

<p><img src="../../images/Capitulo%201/ECS_5.png" alt="diagrama1"></p>

<p>Paso 7. Asignar un nombre al clúster y no seleccionar servidores.</p>

<p><img src="../../images/Capitulo%201/ECS_7.png" alt="diagrama1"></p>

<p>Paso 8. Dar un nombre al clúster y no seleccionar los servidores. 
El estandar de nomenclatura va ser <strong>tiposervicio_ambiente</strong>.</p>

<p><img src="../../images/Capitulo%201/ECS_8.png" alt="diagrama1"></p>

<p>Paso 9. Realizar la configuracion de las tareas que se van a ejeuctar. La configuración se realizara en el siguiente paso.</p>

<p><img src="../../images/Capitulo%201/ECS_9.png" alt="diagrama1"></p>

<p>Paso 10. Crear un nuevo Security Group, permitiendo el acceso al tráfico de entrada.</p>

<p><img src="../../images/Capitulo%201/ECS_10.png" alt="diagrama1"></p>

<p>Paso 11. Seleccionar la tarea creada anteriormente y desplegarla.</p>

<p><img src="../../images/Capitulo%201/ECS_11.png" alt="diagrama1"></p>

<p>Paso 12. Una vez desplegada, localizar la IP pública en el clúster para realizar pruebas.</p>

<p><img src="../../images/Capitulo%201/ECS_12.png" alt="diagrama1"></p>

<p>Paso 13. Realizar pruebas con Postman para validar el servicio.</p>

<p><img src="../../images/Capitulo%201/ECS_13.png" alt="diagrama1"></p>

<p><img src="../../images/Capitulo%201/ECS_14.png" alt="diagrama1"></p>

<p>Paso 14. En el clúster ubicamos la IP pública para realizar la petición del servicio.</p>

<p><img src="../../images/Capitulo%201/ECS_15.png" alt="diagrama1"></p>

<p>Paso 15.  Probar postman.</p>

<p><img src="../../images/Capitulo%201/ECS_16.png" alt="diagrama1"></p>

<h3 id="resultado-esperado">Resultado esperado</h3>
<p><img src="../../images/Capitulo%201/ECS_16.png" alt="diagrama1"></p>


      
    </div>
    <script src="../../../ajax/libs/anchor-js/4.1.0/anchor.min.js" integrity="sha256-lZaRhKri35AyJSypXXs4o6OPFTbTmUoltBbDCbdzegg=" crossorigin="anonymous"></script>
    <script>anchors.add();</script>
  </body>
</html>
